name: "Terraform Apply"
on:
  push:
    branches:
      - main
env:
  AWS_REGION: "ca-central-1"
  TERRAFORM_VERSION: 1.1.7
  TERRAGRUNT_VERSION: 0.36.3
  CONFTEST_VERSION: 0.30.0

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  terragrunt-apply-org-account:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
        - module: main
        - module: aft

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::659087519042:role/CDSLZTerraformAdministratorRole
          role-session-name: SREBotGitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform apply aft ${{ matrix.module }}
        working-directory: terragrunt/org_account/${{ matrix.module }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

  terragrunt-apply-log-archive-account:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
        - module: main

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::274536870005:role/CDSLZTerraformAdministratorRole
          role-session-name: SREBotGitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform apply log-archive ${{ matrix.module }}
        working-directory: terragrunt/audit/${{ matrix.module }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

  terragrunt-apply-audit-account:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
        - module: main

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::886481071419:role/CDSLZTerraformAdministratorRole
          role-session-name: SREBotGitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform apply audit ${{ matrix.module }}
        working-directory: terragrunt/audit/${{ matrix.module }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve

  terragrunt-apply-aft-account:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      TF_VAR_aft_slack_webhook: ${{ secrets.LZ_CHANNEL_WEBHOOK }}

    strategy:
      fail-fast: true
      matrix:
        include:
        - module: main

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::137554749751:role/CDSLZTerraformAdministratorRole
          role-session-name: SREBotGitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform apply aft ${{ matrix.module }}
        working-directory: terragrunt/aft/${{ matrix.module }}
        run: |
          terragrunt apply --terragrunt-non-interactive -auto-approve